{"ast":null,"code":"import style from './style';\nimport compose from './compose';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction transform(value) {\n  return value <= 1 ? `${value * 100}%` : value;\n}\n\nexport const width = style({\n  prop: 'width',\n  transform\n});\nexport const maxWidth = props => {\n  if (props.maxWidth) {\n    const styleFromPropValue = propValue => {\n      const breakpoint = props.theme.breakpoints.values[propValue];\n      return {\n        maxWidth: breakpoint || transform(propValue)\n      };\n    };\n\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\n  }\n\n  return null;\n};\nmaxWidth.filterProps = ['maxWidth'];\nexport const minWidth = style({\n  prop: 'minWidth',\n  transform\n});\nexport const height = style({\n  prop: 'height',\n  transform\n});\nexport const maxHeight = style({\n  prop: 'maxHeight',\n  transform\n});\nexport const minHeight = style({\n  prop: 'minHeight',\n  transform\n});\nexport const sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform\n});\nexport const sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform\n});\nexport const boxSizing = style({\n  prop: 'boxSizing'\n});\nconst sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\nexport default sizing;","map":{"version":3,"sources":["D:/MoneyTracker/front-end/node_modules/@material-ui/system/esm/sizing.js"],"names":["style","compose","handleBreakpoints","transform","value","width","prop","maxWidth","props","styleFromPropValue","propValue","breakpoint","theme","breakpoints","values","filterProps","minWidth","height","maxHeight","minHeight","sizeWidth","cssProperty","sizeHeight","boxSizing","sizing"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAOA,KAAK,IAAI,CAAT,GAAc,GAAEA,KAAK,GAAG,GAAI,GAA5B,GAAiCA,KAAxC;AACD;;AAED,OAAO,MAAMC,KAAK,GAAGL,KAAK,CAAC;AACzBM,EAAAA,IAAI,EAAE,OADmB;AAEzBH,EAAAA;AAFyB,CAAD,CAAnB;AAIP,OAAO,MAAMI,QAAQ,GAAGC,KAAK,IAAI;AAC/B,MAAIA,KAAK,CAACD,QAAV,EAAoB;AAClB,UAAME,kBAAkB,GAAGC,SAAS,IAAI;AACtC,YAAMC,UAAU,GAAGH,KAAK,CAACI,KAAN,CAAYC,WAAZ,CAAwBC,MAAxB,CAA+BJ,SAA/B,CAAnB;AACA,aAAO;AACLH,QAAAA,QAAQ,EAAEI,UAAU,IAAIR,SAAS,CAACO,SAAD;AAD5B,OAAP;AAGD,KALD;;AAOA,WAAOR,iBAAiB,CAACM,KAAD,EAAQA,KAAK,CAACD,QAAd,EAAwBE,kBAAxB,CAAxB;AACD;;AAED,SAAO,IAAP;AACD,CAbM;AAcPF,QAAQ,CAACQ,WAAT,GAAuB,CAAC,UAAD,CAAvB;AACA,OAAO,MAAMC,QAAQ,GAAGhB,KAAK,CAAC;AAC5BM,EAAAA,IAAI,EAAE,UADsB;AAE5BH,EAAAA;AAF4B,CAAD,CAAtB;AAIP,OAAO,MAAMc,MAAM,GAAGjB,KAAK,CAAC;AAC1BM,EAAAA,IAAI,EAAE,QADoB;AAE1BH,EAAAA;AAF0B,CAAD,CAApB;AAIP,OAAO,MAAMe,SAAS,GAAGlB,KAAK,CAAC;AAC7BM,EAAAA,IAAI,EAAE,WADuB;AAE7BH,EAAAA;AAF6B,CAAD,CAAvB;AAIP,OAAO,MAAMgB,SAAS,GAAGnB,KAAK,CAAC;AAC7BM,EAAAA,IAAI,EAAE,WADuB;AAE7BH,EAAAA;AAF6B,CAAD,CAAvB;AAIP,OAAO,MAAMiB,SAAS,GAAGpB,KAAK,CAAC;AAC7BM,EAAAA,IAAI,EAAE,MADuB;AAE7Be,EAAAA,WAAW,EAAE,OAFgB;AAG7BlB,EAAAA;AAH6B,CAAD,CAAvB;AAKP,OAAO,MAAMmB,UAAU,GAAGtB,KAAK,CAAC;AAC9BM,EAAAA,IAAI,EAAE,MADwB;AAE9Be,EAAAA,WAAW,EAAE,QAFiB;AAG9BlB,EAAAA;AAH8B,CAAD,CAAxB;AAKP,OAAO,MAAMoB,SAAS,GAAGvB,KAAK,CAAC;AAC7BM,EAAAA,IAAI,EAAE;AADuB,CAAD,CAAvB;AAGP,MAAMkB,MAAM,GAAGvB,OAAO,CAACI,KAAD,EAAQE,QAAR,EAAkBS,QAAlB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0DI,SAA1D,CAAtB;AACA,eAAeC,MAAf","sourcesContent":["import style from './style';\r\nimport compose from './compose';\r\nimport { handleBreakpoints } from './breakpoints';\r\n\r\nfunction transform(value) {\r\n  return value <= 1 ? `${value * 100}%` : value;\r\n}\r\n\r\nexport const width = style({\r\n  prop: 'width',\r\n  transform\r\n});\r\nexport const maxWidth = props => {\r\n  if (props.maxWidth) {\r\n    const styleFromPropValue = propValue => {\r\n      const breakpoint = props.theme.breakpoints.values[propValue];\r\n      return {\r\n        maxWidth: breakpoint || transform(propValue)\r\n      };\r\n    };\r\n\r\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\r\n  }\r\n\r\n  return null;\r\n};\r\nmaxWidth.filterProps = ['maxWidth'];\r\nexport const minWidth = style({\r\n  prop: 'minWidth',\r\n  transform\r\n});\r\nexport const height = style({\r\n  prop: 'height',\r\n  transform\r\n});\r\nexport const maxHeight = style({\r\n  prop: 'maxHeight',\r\n  transform\r\n});\r\nexport const minHeight = style({\r\n  prop: 'minHeight',\r\n  transform\r\n});\r\nexport const sizeWidth = style({\r\n  prop: 'size',\r\n  cssProperty: 'width',\r\n  transform\r\n});\r\nexport const sizeHeight = style({\r\n  prop: 'size',\r\n  cssProperty: 'height',\r\n  transform\r\n});\r\nexport const boxSizing = style({\r\n  prop: 'boxSizing'\r\n});\r\nconst sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\r\nexport default sizing;"]},"metadata":{},"sourceType":"module"}