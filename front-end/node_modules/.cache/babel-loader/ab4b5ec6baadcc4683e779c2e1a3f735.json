{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amey Bobade\\\\Desktop\\\\Money Tracker\\\\front-end\\\\src\\\\pages\\\\Report.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Bar, Line } from \"react-chartjs-2\";\nimport ReportFilter from './components/ReportFilter'; // import { HorizontalBar } from 'react-chartjs-2';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Report = () => {\n  _s();\n\n  const months = [{\n    index: \"01\",\n    value: \"January\"\n  }, {\n    index: \"02\",\n    value: \"Febuary\"\n  }, {\n    index: \"03\",\n    value: \"March\"\n  }, {\n    index: \"04\",\n    value: \"April\"\n  }, {\n    index: \"05\",\n    value: \"May\"\n  }, {\n    index: \"06\",\n    value: \"June\"\n  }, {\n    index: \"07\",\n    value: \"July\"\n  }, {\n    index: \"08\",\n    value: \"August\"\n  }, {\n    index: \"09\",\n    value: \"September\"\n  }, {\n    index: \"10\",\n    value: \"October\"\n  }, {\n    index: \"11\",\n    value: \"November\"\n  }, {\n    index: \"12\",\n    value: \"December\"\n  }];\n  const filters = [{\n    value: \"Month\"\n  }, {\n    value: \"Year\"\n  }];\n  const [transactions, setTransactions] = useState({\n    'message': \"data not found\"\n  });\n  const data = {\n    labels: [\"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\"],\n    previousDate: {\n      // label: \"08/10/2019 - 09/30/2019\",\n      dataSet: [0, 0, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000]\n    },\n    currentDate: {\n      // label: \"10/01/2019 - 11/20/2019\",\n      dataSet: [10000, 225000, 10000, 225000, -100000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border pt-3\",\n      children: /*#__PURE__*/_jsxDEV(ReportFilter, {\n        setTransactions: setTransactions,\n        months: months,\n        filters: filters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        pointstyle: \"star\",\n        data: {\n          labels: data.labels,\n          responsive: true,\n          offset: true,\n          datasets: [{\n            label: \"Income\",\n            pointStyle: \"rectRounded\",\n            backgroundColor: \"#6ED3FF\",\n            barThickness: 40,\n            categoryPercentage: 1,\n            borderColor: \"#6ED3FF\",\n            data: data.previousDate.dataSet //From API\n\n          }, {\n            label: \"Expense\",\n            backgroundColor: \"#FF0000\",\n            borderColor: \"#FF0000\",\n            barThickness: 40,\n            categoryPercentage: 1,\n            pointStyle: \"triangle\",\n            data: data.currentDate.dataSet //From API\n\n          }]\n        },\n        height: 400,\n        options: {\n          //  \n          offsetGridLines: true,\n          drawTicks: true,\n          layout: {\n            padding: {\n              top: 30,\n              right: 40,\n              bottom: 40\n            }\n          },\n          legend: {\n            display: true,\n            position: \"right\",\n            align: \"start\",\n            labels: {\n              usePointStyle: true\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: {\n              stacked: true,\n              ticks: {\n                padding: 5\n              },\n              gridLines: {\n                display: false\n              }\n            },\n            yAxes: {\n              stacked: false,\n              gridLines: {\n                drawBorder: false\n              },\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 6,\n                padding: 20,\n\n                callback(n) {\n                  if (n < 1e3) return n;\n                  if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\n                }\n\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Report, \"RE+7baayAgPsqNEE3c9/3v+Vbfk=\");\n\n_c = Report;\nexport default Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["C:/Users/Amey Bobade/Desktop/Money Tracker/front-end/src/pages/Report.js"],"names":["React","useState","Navbar","Chart","ChartJS","Bar","Line","ReportFilter","Report","months","index","value","filters","transactions","setTransactions","data","labels","previousDate","dataSet","currentDate","responsive","offset","datasets","label","pointStyle","backgroundColor","barThickness","categoryPercentage","borderColor","offsetGridLines","drawTicks","layout","padding","top","right","bottom","legend","display","position","align","usePointStyle","maintainAspectRatio","scales","xAxes","stacked","ticks","gridLines","yAxes","drawBorder","beginAtZero","maxTicksLimit","callback","n","toFixed"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Navbar from './components/Navbar'\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport ReportFilter from './components/ReportFilter';\r\n// import { HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst Report = () => {\r\n    const months = [\r\n        { index: \"01\", value: \"January\" },\r\n        { index: \"02\", value: \"Febuary\" },\r\n        { index: \"03\", value: \"March\" },\r\n        { index: \"04\", value: \"April\" },\r\n        { index: \"05\", value: \"May\" },\r\n        { index: \"06\", value: \"June\" },\r\n        { index: \"07\", value: \"July\" },\r\n        { index: \"08\", value: \"August\" },\r\n        { index: \"09\", value: \"September\" },\r\n        { index: \"10\", value: \"October\" },\r\n        { index: \"11\", value: \"November\" },\r\n        { index: \"12\", value: \"December\" },\r\n      ];\r\n\r\n      const filters = [\r\n        {\r\n          value: \"Month\",\r\n        },\r\n        {\r\n          value: \"Year\",\r\n        },\r\n      ];\r\n    const [transactions, setTransactions] = useState({'message' : \"data not found\"});\r\n    const data = {\r\n        labels: [\"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\"],\r\n        previousDate: {\r\n            // label: \"08/10/2019 - 09/30/2019\",\r\n            dataSet: [0, 0, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000]\r\n        },\r\n        currentDate: {\r\n            // label: \"10/01/2019 - 11/20/2019\",\r\n            dataSet: [10000, 225000, 10000, 225000, -100000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000]\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"container border pt-3\"><ReportFilter setTransactions={setTransactions} months={months} filters={filters}/></div>\r\n            \r\n            <div className=\"container\">\r\n                <Line\r\n                    pointstyle=\"star\"\r\n                    data={{\r\n                        labels: data.labels,\r\n                        responsive: true,\r\n                        offset: true,\r\n                        datasets: [\r\n                            {\r\n                                label: \"Income\",\r\n                                pointStyle: \"rectRounded\",\r\n                                backgroundColor: \"#6ED3FF\",\r\n                                barThickness: 40,\r\n                                categoryPercentage: 1,\r\n                                borderColor: \"#6ED3FF\",\r\n                                data: data.previousDate.dataSet //From API\r\n                            },\r\n                            {\r\n                                label: \"Expense\",\r\n                                backgroundColor: \"#FF0000\",\r\n                                borderColor: \"#FF0000\",\r\n                                barThickness: 40,\r\n                                categoryPercentage: 1,\r\n                                pointStyle: \"triangle\",\r\n                                data: data.currentDate.dataSet //From API\r\n                            }\r\n                        ]\r\n                    }}\r\n                    height={400}\r\n                    options={{\r\n                        //  \r\n                        offsetGridLines: true,\r\n                        drawTicks: true,\r\n                        layout: {\r\n                            padding: {\r\n                                top: 30,\r\n                                right: 40,\r\n                                bottom: 40\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: \"right\",\r\n                            align: \"start\",\r\n                            labels: {\r\n                                usePointStyle: true\r\n                            }\r\n                        },\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            xAxes:\r\n                            {\r\n                                stacked: true,\r\n                                ticks: {\r\n                                    padding: 5\r\n                                },\r\n                                gridLines: {\r\n                                    display: false\r\n                                }\r\n                            },\r\n                            yAxes: {\r\n                                stacked: false,\r\n                                gridLines: {\r\n                                    drawBorder: false\r\n                                },\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                    maxTicksLimit: 6,\r\n                                    padding: 20,\r\n                                    callback(n) {\r\n                                        if (n < 1e3) return n;\r\n                                        if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Report\r\n\r\n"]},"metadata":{},"sourceType":"module"}