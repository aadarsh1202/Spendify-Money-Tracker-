{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\MoneyTracker\\\\front-end\\\\src\\\\pages\\\\Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\"; // import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transaction = () => {\n  _s();\n\n  const expenseCategory = [{\n    value: \"Food\",\n    label: \"$\"\n  }, {\n    value: \"Transport\",\n    label: \"€\"\n  }];\n  const incomeCategory = [{\n    value: \"Salary\",\n    label: \"$\"\n  }, {\n    value: \"Other Income\",\n    label: \"€\"\n  }];\n  const types = [{\n    value: \"Income\",\n    label: \"+\"\n  }, {\n    value: \"Expense\",\n    label: \"-\"\n  }];\n  const [type, setType] = useState(\"Income\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [note, setNote] = useState(\"\");\n  const [date, setDate] = useState(\"\"); // console.log(new Date().toLocaleDateString(\"en-GB\"));\n\n  const handleTypeChange = event => {\n    setType(event.target.value);\n  };\n\n  const handleCategoryChange = event => {\n    setCategory(event.target.value);\n  };\n\n  const handleAmountChange = event => {\n    setAmount(event.target.value);\n  };\n\n  const handleNoteChange = event => {\n    setNote(event.target.value);\n  };\n\n  const handleDateChange = event => {\n    const newDate = event.target.value.split(\"-\").reverse().join(\"-\");\n    console.log(newDate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-select-currency\",\n      select: true,\n      label: \"Type\",\n      helperText: \"Please select your type\",\n      onChange: handleTypeChange,\n      value: type,\n      children: types.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option.value,\n        children: [option.label, \" \", option.value]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), type === \"Income\" ? /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-select-currency\",\n      select: true,\n      label: \"Category\",\n      helperText: \"Please select your category\",\n      value: category,\n      onChange: handleCategoryChange,\n      children: incomeCategory.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option.value,\n        children: [option.label, \" \", option.value]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-select-currency\",\n      select: true,\n      label: \"Category\",\n      helperText: \"Please select your category\",\n      value: category,\n      onChange: handleCategoryChange,\n      children: expenseCategory.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option.value,\n        children: [option.label, \" \", option.value]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Amount\",\n      value: amount,\n      onChange: handleAmountChange,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Note\",\n      id: \"outlined-basic\",\n      value: note,\n      onChange: handleNoteChange,\n      variant: \"outlined\",\n      placeholder: \"Additional details about transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transaction, \"qlnQZw9yFbev3FscTxcDN5d1VYo=\");\n\n_c = Transaction;\nexport default Transaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"sources":["D:/Project/MoneyTracker/front-end/src/pages/Transactions.js"],"names":["React","useState","TextField","MenuItem","Transaction","expenseCategory","value","label","incomeCategory","types","type","setType","category","setCategory","amount","setAmount","note","setNote","date","setDate","handleTypeChange","event","target","handleCategoryChange","handleAmountChange","handleNoteChange","handleDateChange","newDate","split","reverse","join","console","log","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Transaction = () => {\r\n  const expenseCategory = [\r\n    {\r\n      value: \"Food\",\r\n      label: \"$\",\r\n    },\r\n    {\r\n      value: \"Transport\",\r\n      label: \"€\",\r\n    },\r\n  ];\r\n  const incomeCategory = [\r\n    {\r\n      value: \"Salary\",\r\n      label: \"$\",\r\n    },\r\n    {\r\n      value: \"Other Income\",\r\n      label: \"€\",\r\n    },\r\n  ];\r\n  const types = [\r\n    {\r\n      value: \"Income\",\r\n      label: \"+\",\r\n    },\r\n    {\r\n      value: \"Expense\",\r\n      label: \"-\",\r\n    },\r\n  ];\r\n\r\n  const [type, setType] = useState(\"Income\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [note, setNote] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  // console.log(new Date().toLocaleDateString(\"en-GB\"));\r\n  const handleTypeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n  const handleAmountChange = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n  const handleNoteChange = (event) => {\r\n    setNote(event.target.value);\r\n  };\r\n  const handleDateChange = (event) => {\r\n    \r\n    const newDate = event.target.value.split(\"-\").reverse().join(\"-\");\r\n    console.log(newDate);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Type\"\r\n        helperText=\"Please select your type\"\r\n        onChange={handleTypeChange}\r\n        value={type}\r\n      >\r\n        {types.map((option) => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label} {option.value}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n\r\n      {type === \"Income\" ? (\r\n        <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Category\"\r\n          helperText=\"Please select your category\"\r\n          value={category}\r\n          onChange={handleCategoryChange}\r\n        >\r\n          {incomeCategory.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label} {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      ) : (\r\n        <TextField\r\n          id=\"outlined-select-currency\"\r\n          select\r\n          label=\"Category\"\r\n          helperText=\"Please select your category\"\r\n          value={category}\r\n          onChange={handleCategoryChange}\r\n        >\r\n          {expenseCategory.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label} {option.value}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      )}\r\n\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Amount\"\r\n        value={amount}\r\n        onChange={handleAmountChange}\r\n        variant=\"outlined\"\r\n      />\r\n      <TextField\r\n        fullWidth\r\n        label=\"Note\"\r\n        id=\"outlined-basic\"\r\n        value={note}\r\n        onChange={handleNoteChange}\r\n        variant=\"outlined\"\r\n        placeholder=\"Additional details about transaction\"\r\n      />\r\n      {/* <TextField\r\n        fullWidth\r\n        label=\"Date\"\r\n        id=\"outlined-basic\"\r\n        value={date}\r\n        onChange={handleDateChange}\r\n        variant=\"outlined\"\r\n        placeholder=\"Date\"\r\n      /> */}\r\n      {/* <DatePicker\r\n        dateFormat=\"dd/MM/yyyy\"\r\n        selected={date}\r\n        \r\n        value={date}\r\n        onChange={(date) => setDate(date.toLocaleDateString('en-GB'))}\r\n      /> */}\r\n\r\n      <input type=\"date\" value={date} onChange={handleDateChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"]},"metadata":{},"sourceType":"module"}