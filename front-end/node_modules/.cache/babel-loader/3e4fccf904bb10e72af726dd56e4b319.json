{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amey Bobade\\\\Desktop\\\\Money Tracker\\\\front-end\\\\src\\\\pages\\\\Report.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport ReportFilter from \"./components/ReportFilter\"; // import { HorizontalBar } from 'react-chartjs-2';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Report = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState({\n    message: \"data not found\"\n  });\n  const data = {\n    labels: [\"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\", \"Organic\", \"Sponsored\"],\n    previousDate: {\n      // label: \"08/10/2019 - 09/30/2019\",\n      dataSet: [10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000]\n    },\n    currentDate: {\n      // label: \"10/01/2019 - 11/20/2019\",\n      dataSet: [10000, 225000, 10000, 225000, -100000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportFilter, {\n      setTransactions: setTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), filterSelected === \"Date\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 col-md-4 col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"date\",\n        label: \"Date\",\n        type: \"date\",\n        helperText: \"Please select the date of transaction\",\n        onChange: handleDateChange,\n        value: dateSelected,\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : filterSelected === \"Month\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 col-md-4 col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined\",\n        select: true,\n        fullWidth: true,\n        label: \"Month Name\",\n        value: months[monthSelected].value,\n        onChange: handleMonthChange,\n        helperText: \"Select Month\",\n        children: Object.keys(months).map(monthIndex => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: months[monthIndex].value,\n          children: months[monthIndex].value\n        }, monthIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 col-md-4 col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined\",\n        select: true,\n        fullWidth: true,\n        label: \"Year\",\n        value: yearSelected,\n        onChange: handleYearChange,\n        helperText: \"Select Product name\",\n        children: Object.keys(yearsList).map(yearIndex => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: yearsList[yearIndex],\n          children: yearsList[yearIndex]\n        }, yearIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), filterSelected === \"Month\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 col-md-4 col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined\",\n        select: true,\n        fullWidth: true,\n        label: \"Year\",\n        value: yearSelected,\n        onChange: handleYearChange,\n        helperText: \"Select Product name\",\n        children: Object.keys(yearsList).map(yearIndex => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: yearsList[yearIndex],\n          children: yearsList[yearIndex]\n        }, yearIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        pointstyle: \"star\",\n        data: {\n          labels: data.labels,\n          responsive: true,\n          offset: true,\n          datasets: [{\n            label: \"Income\",\n            pointStyle: \"rectRounded\",\n            backgroundColor: \"#6ED3FF\",\n            barThickness: 40,\n            categoryPercentage: 1,\n            borderColor: \"#6ED3FF\",\n            data: data.previousDate.dataSet //From API\n\n          }, {\n            label: \"Expense\",\n            backgroundColor: \"#FF0000\",\n            borderColor: \"#FF0000\",\n            barThickness: 40,\n            categoryPercentage: 1,\n            pointStyle: \"triangle\",\n            data: data.currentDate.dataSet //From API\n\n          }]\n        },\n        height: 400,\n        options: {\n          //\n          offsetGridLines: true,\n          drawTicks: true,\n          layout: {\n            padding: {\n              top: 30,\n              right: 40,\n              bottom: 40\n            }\n          },\n          legend: {\n            display: true,\n            position: \"right\",\n            align: \"start\",\n            labels: {\n              usePointStyle: true\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: {\n              stacked: true,\n              ticks: {\n                padding: 5\n              },\n              gridLines: {\n                display: false\n              }\n            },\n            yAxes: {\n              stacked: false,\n              gridLines: {\n                drawBorder: false\n              },\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 6,\n                padding: 20,\n\n                callback(n) {\n                  if (n < 1e3) return n;\n                  if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\n                }\n\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Report, \"7phWC74JDEKHSkOa9z91YsbOr9w=\");\n\n_c = Report;\nexport default Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["C:/Users/Amey Bobade/Desktop/Money Tracker/front-end/src/pages/Report.js"],"names":["React","useState","Navbar","Chart","ChartJS","Bar","Line","ReportFilter","Report","transactions","setTransactions","message","data","labels","previousDate","dataSet","currentDate","filterSelected","handleDateChange","dateSelected","shrink","months","monthSelected","value","handleMonthChange","Object","keys","map","monthIndex","yearSelected","handleYearChange","yearsList","yearIndex","responsive","offset","datasets","label","pointStyle","backgroundColor","barThickness","categoryPercentage","borderColor","offsetGridLines","drawTicks","layout","padding","top","right","bottom","legend","display","position","align","usePointStyle","maintainAspectRatio","scales","xAxes","stacked","ticks","gridLines","yAxes","drawBorder","beginAtZero","maxTicksLimit","callback","n","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport ReportFilter from \"./components/ReportFilter\";\r\n// import { HorizontalBar } from 'react-chartjs-2';\r\n\r\nconst Report = () => {\r\n  const [transactions, setTransactions] = useState({\r\n    message: \"data not found\",\r\n  });\r\n  const data = {\r\n    labels: [\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n      \"Organic\",\r\n      \"Sponsored\",\r\n    ],\r\n    previousDate: {\r\n      // label: \"08/10/2019 - 09/30/2019\",\r\n      dataSet: [\r\n        10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000,\r\n        150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000,\r\n        10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000,\r\n        150000,\r\n      ],\r\n    },\r\n    currentDate: {\r\n      // label: \"10/01/2019 - 11/20/2019\",\r\n      dataSet: [\r\n        10000, 225000, 10000, 225000, -100000, 150000, 10000, 150000, 10000,\r\n        150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000,\r\n        10000, 150000, 10000, 150000, 10000, 150000, 10000, 150000, 10000,\r\n        150000,\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <ReportFilter setTransactions={setTransactions} />\r\n      {filterSelected === \"Date\" ? (\r\n        <div className=\"col-4 col-md-4 col-sm-12\">\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            helperText={\"Please select the date of transaction\"}\r\n            onChange={handleDateChange}\r\n            value={dateSelected}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n      ) : filterSelected === \"Month\" ? (\r\n        <div className=\"col-4 col-md-4 col-sm-12\">\r\n          <TextField\r\n            id=\"outlined\"\r\n            select\r\n            fullWidth\r\n            label=\"Month Name\"\r\n            value={months[monthSelected].value}\r\n            onChange={handleMonthChange}\r\n            helperText=\"Select Month\"\r\n          >\r\n            {Object.keys(months).map((monthIndex) => (\r\n              <MenuItem key={monthIndex} value={months[monthIndex].value}>\r\n                {months[monthIndex].value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      ) : (\r\n        <div className=\"col-4 col-md-4 col-sm-12\">\r\n          <TextField\r\n            id=\"outlined\"\r\n            select\r\n            fullWidth\r\n            label=\"Year\"\r\n            value={yearSelected}\r\n            onChange={handleYearChange}\r\n            helperText=\"Select Product name\"\r\n          >\r\n            {Object.keys(yearsList).map((yearIndex) => (\r\n              <MenuItem key={yearIndex} value={yearsList[yearIndex]}>\r\n                {yearsList[yearIndex]}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      )}\r\n\r\n      {filterSelected === \"Month\" ? (\r\n        <div className=\"col-4 col-md-4 col-sm-12\">\r\n          <TextField\r\n            id=\"outlined\"\r\n            select\r\n            fullWidth\r\n            label=\"Year\"\r\n            value={yearSelected}\r\n            onChange={handleYearChange}\r\n            helperText=\"Select Product name\"\r\n          >\r\n            {Object.keys(yearsList).map((yearIndex) => (\r\n              <MenuItem key={yearIndex} value={yearsList[yearIndex]}>\r\n                {yearsList[yearIndex]}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <div className=\"container\">\r\n        <Line\r\n          pointstyle=\"star\"\r\n          data={{\r\n            labels: data.labels,\r\n            responsive: true,\r\n            offset: true,\r\n            datasets: [\r\n              {\r\n                label: \"Income\",\r\n                pointStyle: \"rectRounded\",\r\n                backgroundColor: \"#6ED3FF\",\r\n                barThickness: 40,\r\n                categoryPercentage: 1,\r\n                borderColor: \"#6ED3FF\",\r\n                data: data.previousDate.dataSet, //From API\r\n              },\r\n              {\r\n                label: \"Expense\",\r\n                backgroundColor: \"#FF0000\",\r\n                borderColor: \"#FF0000\",\r\n                barThickness: 40,\r\n                categoryPercentage: 1,\r\n                pointStyle: \"triangle\",\r\n                data: data.currentDate.dataSet, //From API\r\n              },\r\n            ],\r\n          }}\r\n          height={400}\r\n          options={{\r\n            //\r\n            offsetGridLines: true,\r\n            drawTicks: true,\r\n            layout: {\r\n              padding: {\r\n                top: 30,\r\n                right: 40,\r\n                bottom: 40,\r\n              },\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"right\",\r\n              align: \"start\",\r\n              labels: {\r\n                usePointStyle: true,\r\n              },\r\n            },\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              xAxes: {\r\n                stacked: true,\r\n                ticks: {\r\n                  padding: 5,\r\n                },\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n              yAxes: {\r\n                stacked: false,\r\n                gridLines: {\r\n                  drawBorder: false,\r\n                },\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  maxTicksLimit: 6,\r\n                  padding: 20,\r\n                  callback(n) {\r\n                    if (n < 1e3) return n;\r\n                    if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      {/* <div className=\"container\">\r\n                <Bar\r\n                    pointstyle=\"star\"\r\n                    data={{\r\n                        labels: data.labels,\r\n                        responsive: true,\r\n                        offset: true,\r\n                        datasets: [\r\n                            {\r\n                                label: \"Mobile\",\r\n                                pointStyle: \"rectRounded\",\r\n                                backgroundColor: \"#6ED3FF\",\r\n                                barThickness: 40,\r\n                                categoryPercentage: 1,\r\n                                borderColor: \"#6ED3FF\",\r\n                                data: data.previousDate.dataSet //From API\r\n                            },\r\n                            {\r\n                                label: \"Desktop\",\r\n                                backgroundColor: \"#FF0000\",\r\n                                borderColor: \"#FF0000\",\r\n                                barThickness: 40,\r\n                                categoryPercentage: 1,\r\n                                pointStyle: \"triangle\",\r\n                                data: data.currentDate.dataSet //From API\r\n                            }\r\n                        ]\r\n                    }}\r\n                    height={400}\r\n                    options={{\r\n                        //  \r\n                        offsetGridLines: true,\r\n                        drawTicks: true,\r\n                        layout: {\r\n                            padding: {\r\n                                top: 30,\r\n                                right: 40,\r\n                                bottom: 40\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: \"right\",\r\n                            align: \"start\",\r\n                            labels: {\r\n                                usePointStyle: true\r\n                            }\r\n                        },\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        scales: {\r\n                            xAxes:\r\n                            {\r\n                                stacked: true,\r\n                                ticks: {\r\n                                    padding: 5\r\n                                },\r\n                                gridLines: {\r\n                                    display: false\r\n                                }\r\n                            },\r\n                            yAxes: {\r\n                                stacked: false,\r\n                                gridLines: {\r\n                                    drawBorder: false\r\n                                },\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                    maxTicksLimit: 6,\r\n                                    padding: 20,\r\n                                    callback(n) {\r\n                                        if (n < 1e3) return n;\r\n                                        if (n >= 1e3) return +(n / 1e3).toFixed(1) + \"K\";\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Report;\r\n"]},"metadata":{},"sourceType":"module"}