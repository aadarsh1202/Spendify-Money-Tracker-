{"ast":null,"code":"var _jsxFileName = \"D:\\\\MoneyTracker\\\\front-end\\\\src\\\\pages\\\\Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport Navbar from \"./components/Navbar\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Transaction = () => {\n  _s();\n\n  const expenseCategory = [{\n    value: \"Food\",\n    label: \"$\"\n  }, {\n    value: \"Transport\",\n    label: \"€\"\n  }];\n  const incomeCategory = [{\n    value: \"Salary\",\n    label: \"$\"\n  }, {\n    value: \"Other Income\",\n    label: \"€\"\n  }];\n  const types = [{\n    value: \"Income\",\n    label: \"+\"\n  }, {\n    value: \"Expense\",\n    label: \"-\"\n  }];\n  const [type, setType] = useState(\"Income\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [note, setNote] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [trasactionForm, setTrasactionForm] = useState(false);\n  const [categoryEmpty, setCategoryEmpty] = useState(false);\n  const [dateEmpty, setDateEmpty] = useState(false);\n  const [amountEmpty, setamountEmpty] = useState(false); // console.log(new Date().toLocaleDateString(\"en-GB\"));\n\n  const handleTransactionFormView = () => {\n    setTrasactionForm(!trasactionForm);\n  };\n\n  const handleTypeChange = event => {\n    setType(event.target.value);\n  };\n\n  const handleCategoryChange = event => {\n    setCategory(event.target.value);\n    setCategoryEmpty(false);\n  };\n\n  const handleAmountChange = event => {\n    setAmount(event.target.value);\n    set;\n  };\n\n  const handleNoteChange = event => {\n    setNote(event.target.value);\n  };\n\n  const handleDateChange = event => {\n    // const newDate = event.target.value.split(\"-\").reverse().join(\"/\");\n    setDate(event.target.value);\n    setDateEmpty(false); // console.log(date);\n  };\n\n  const handleCancel = () => {\n    setType(\"Income\");\n    setCategory(\"\");\n    setAmount(0);\n    setNote(\"\");\n    setDate(\"\");\n    setTrasactionForm(false);\n  };\n\n  const handleSave = event => {\n    event.preventDefault();\n    const data = JSON.parse(localStorage.getItem(\"loginData\"));\n    const transaction = {\n      id: localStorage.getItem(\"id\"),\n      walletname: data.wallet_name,\n      type: type,\n      category: category,\n      amount: amount,\n      note: note,\n      date: date\n    };\n    console.log(transaction);\n\n    if (category !== \"\" && date !== \"\") {\n      axios.post(\"https://money-tracker-22.herokuapp.com/transactions\", transaction).then(function (response) {\n        console.log(response.data);\n        console.log(response.data.message);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      handleCancel();\n      setTrasactionForm(false);\n    } else {\n      if (category === \"\") {\n        setCategoryEmpty(true);\n      } else if (date === \"\") {\n        setDateEmpty(true);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), trasactionForm ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency\",\n        select: true,\n        label: \"Type\",\n        helperText: \"Please select your type\",\n        onChange: handleTypeChange,\n        value: type,\n        children: types.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: [option.label, \" \", option.value]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), type === \"Income\" ? /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency\",\n        select: true,\n        label: \"Category\",\n        helperText: categoryEmpty ? \"This field is required\" : \"Please select your category\",\n        error: categoryEmpty ? true : false,\n        value: category,\n        onChange: handleCategoryChange,\n        children: incomeCategory.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: [option.label, \" \", option.value]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency\",\n        select: true,\n        label: \"Category\",\n        helperText: \"Please select your category\",\n        value: category,\n        onChange: handleCategoryChange,\n        children: expenseCategory.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: [option.label, \" \", option.value]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Amount\",\n        type: \"number\",\n        InputProps: {\n          inputProps: {\n            min: 1\n          }\n        },\n        value: amount,\n        onChange: handleAmountChange,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Note\",\n        id: \"outlined-basic\",\n        value: note,\n        onChange: handleNoteChange,\n        variant: \"outlined\",\n        placeholder: \"Additional details about transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"date\",\n        label: \"Date\",\n        type: \"date\",\n        helperText: dateEmpty ? \"This field is required\" : \"Please select the date of transaction\",\n        error: dateEmpty ? true : false,\n        required: true,\n        onChange: handleDateChange,\n        value: date,\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-secondary\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-success\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: handleTransactionFormView,\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Transaction, \"uEMcLXuxcG42lW3yadQ73ZP//iI=\");\n\n_c = Transaction;\nexport default Transaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"sources":["D:/MoneyTracker/front-end/src/pages/Transactions.js"],"names":["React","useState","TextField","MenuItem","Button","Navbar","axios","Transaction","expenseCategory","value","label","incomeCategory","types","type","setType","category","setCategory","amount","setAmount","note","setNote","date","setDate","trasactionForm","setTrasactionForm","categoryEmpty","setCategoryEmpty","dateEmpty","setDateEmpty","amountEmpty","setamountEmpty","handleTransactionFormView","handleTypeChange","event","target","handleCategoryChange","handleAmountChange","set","handleNoteChange","handleDateChange","handleCancel","handleSave","preventDefault","data","JSON","parse","localStorage","getItem","transaction","id","walletname","wallet_name","console","log","post","then","response","message","catch","error","map","option","inputProps","min","shrink"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport axios from \"axios\";\r\n\r\nconst Transaction = () => {\r\n  const expenseCategory = [\r\n    {\r\n      value: \"Food\",\r\n      label: \"$\",\r\n    },\r\n    {\r\n      value: \"Transport\",\r\n      label: \"€\",\r\n    },\r\n  ];\r\n  const incomeCategory = [\r\n    {\r\n      value: \"Salary\",\r\n      label: \"$\",\r\n    },\r\n    {\r\n      value: \"Other Income\",\r\n      label: \"€\",\r\n    },\r\n  ];\r\n  const types = [\r\n    {\r\n      value: \"Income\",\r\n      label: \"+\",\r\n    },\r\n    {\r\n      value: \"Expense\",\r\n      label: \"-\",\r\n    },\r\n  ];\r\n\r\n\r\n  const [type, setType] = useState(\"Income\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [note, setNote] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [trasactionForm, setTrasactionForm] = useState(false)\r\n  const [categoryEmpty, setCategoryEmpty] = useState(false)\r\n  const [dateEmpty, setDateEmpty] = useState(false)\r\n  const [amountEmpty, setamountEmpty] = useState(false)\r\n  // console.log(new Date().toLocaleDateString(\"en-GB\"));\r\n\r\n  const handleTransactionFormView = () => {\r\n    setTrasactionForm(!trasactionForm)\r\n  }\r\n  const handleTypeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n    setCategoryEmpty(false)\r\n  };\r\n  const handleAmountChange = (event) => {\r\n    setAmount(event.target.value);\r\n    set\r\n  };\r\n  const handleNoteChange = (event) => {\r\n    setNote(event.target.value);\r\n  };\r\n  const handleDateChange = (event) => {\r\n    // const newDate = event.target.value.split(\"-\").reverse().join(\"/\");\r\n    setDate(event.target.value);\r\n    setDateEmpty(false)\r\n    // console.log(date);\r\n  };\r\n\r\n\r\n  const handleCancel = () => {\r\n    setType(\"Income\");\r\n    setCategory(\"\");\r\n    setAmount(0);\r\n    setNote(\"\");\r\n    setDate(\"\");\r\n    setTrasactionForm(false)\r\n  };\r\n\r\n  const handleSave = (event) => {\r\n    event.preventDefault();\r\n    const data = JSON.parse(localStorage.getItem(\"loginData\"));\r\n    const transaction = {\r\n      id: localStorage.getItem(\"id\"),\r\n      walletname: data.wallet_name,\r\n      type: type,\r\n      category: category,\r\n      amount: amount,\r\n      note: note,\r\n      date: date,\r\n    };\r\n    console.log(transaction);\r\n    if (category !== \"\" && date !== \"\") {\r\n      axios\r\n        .post(\"https://money-tracker-22.herokuapp.com/transactions\", transaction)\r\n        .then(function (response) {\r\n          console.log(response.data);\r\n\r\n          console.log(response.data.message);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n      handleCancel();\r\n      setTrasactionForm(false)\r\n    }\r\n    else {\r\n      if (category === \"\") {\r\n        setCategoryEmpty(true)\r\n      }\r\n      else if (date === \"\") {\r\n        setDateEmpty(true)\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n\r\n      {trasactionForm ? (\r\n        <form className=\"container mt-5\" >\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"Type\"\r\n            helperText=\"Please select your type\"\r\n            onChange={handleTypeChange}\r\n            value={type}\r\n          >\r\n            {types.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label} {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n\r\n          {type === \"Income\" ? (\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Category\"\r\n              helperText={categoryEmpty ? \"This field is required\" : \"Please select your category\"}\r\n              error={categoryEmpty ? true : false}\r\n              value={category}\r\n              onChange={handleCategoryChange}\r\n            >\r\n              {incomeCategory.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label} {option.value}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          ) : (\r\n            <TextField\r\n              id=\"outlined-select-currency\"\r\n              select\r\n              label=\"Category\"\r\n              helperText=\"Please select your category\"\r\n              value={category}\r\n              onChange={handleCategoryChange}\r\n            >\r\n              {expenseCategory.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label} {option.value}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          )}\r\n\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Amount\"\r\n            type=\"number\"\r\n            InputProps={{ inputProps: { min: 1 } }}\r\n            value={amount}\r\n            onChange={handleAmountChange}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Note\"\r\n            id=\"outlined-basic\"\r\n            value={note}\r\n            onChange={handleNoteChange}\r\n            variant=\"outlined\"\r\n            placeholder=\"Additional details about transaction\"\r\n          />\r\n\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            helperText={dateEmpty ? \"This field is required\" : \"Please select the date of transaction\"}\r\n            error={dateEmpty ? true : false}\r\n            required={true}\r\n            onChange={handleDateChange}\r\n            value={date}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-success\"\r\n            onClick={handleSave}\r\n          >\r\n            Save\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleTransactionFormView}>Add Transaction</button>\r\n      )}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"]},"metadata":{},"sourceType":"module"}