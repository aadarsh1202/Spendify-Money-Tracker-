{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amey Bobade\\\\Desktop\\\\Money Tracker\\\\front-end\\\\src\\\\pages\\\\components\\\\ReportFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportFilter = () => {\n  _s();\n\n  const filters = [{\n    value: \"Date\"\n  }, {\n    value: \"Month\"\n  }, {\n    value: \"Year\"\n  }];\n  const months = [{\n    index: \"01\",\n    value: \"January\"\n  }, {\n    index: \"02\",\n    value: \"Febuary\"\n  }, {\n    index: \"03\",\n    value: \"March\"\n  }, {\n    index: \"04\",\n    value: \"April\"\n  }, {\n    index: \"05\",\n    value: \"May\"\n  }, {\n    index: \"06\",\n    value: \"June\"\n  }, {\n    index: \"07\",\n    value: \"July\"\n  }, {\n    index: \"08\",\n    value: \"August\"\n  }, {\n    index: \"09\",\n    value: \"September\"\n  }, {\n    index: \"10\",\n    value: \"October\"\n  }, {\n    index: \"11\",\n    value: \"November\"\n  }, {\n    index: \"12\",\n    value: \"December\"\n  }];\n  const [filterSelected, setFilterSelected] = useState(\"Month\");\n  const [yearsList, setYearsList] = useState([]);\n  const [yearSelected, setYearSelected] = useState(new Date().getFullYear());\n  const [monthSelected, setMonthSelected] = useState(new Date().getMonth());\n  const [dateSelected, setDateSelected] = useState(\"\");\n  useEffect(() => {\n    // console.log(yearSelected, monthSelected);\n    let currentYear = new Date().getFullYear();\n    let listOfYears = [];\n\n    for (let i = 0; i < 10; i++) {\n      listOfYears[i] = currentYear - i;\n    }\n\n    console.log(listOfYears);\n    setYearsList(listOfYears);\n  }, []);\n\n  const handleFilterChange = event => {\n    setFilterSelected(event.target.value);\n    setMonthSelected(new Date().getMonth());\n    setYearSelected(new Date().getFullYear());\n  };\n\n  const handleDateChange = event => {\n    handleSubmit(event);\n  };\n\n  const handleMonthChange = event => {\n    for (let i = 0; i < 12; i++) {\n      if (months[i].value === event.target.value) {\n        setMonthSelected(i);\n      }\n    }\n\n    setYearSelected(new Date().getFullYear());\n  };\n\n  const handleYearChange = event => {\n    handleSubmit(event);\n  };\n\n  const handleSubmit = event => {\n    let url = \"\";\n    let dataFilter = {};\n    console.log(dateSelected);\n\n    if (filterSelected === \"Date\") {\n      setDateSelected(event.target.value);\n      url = \"https://money-tracker-22.herokuapp.com/viewtransactionsbydate\";\n      dataFilter = {\n        date: event.target.value,\n        id: localStorage.getItem(\"id\")\n      };\n    } else if (filterSelected === \"Month\") {\n      setYearSelected(event.target.value);\n      url = \"https://money-tracker-22.herokuapp.com/chartdatabymonth\";\n      dataFilter = {\n        month: months[monthSelected].index,\n        year: event.target.value,\n        id: localStorage.getItem(\"id\")\n      };\n    } else {\n      setYearSelected(event.target.value);\n      url = \"https://money-tracker-22.herokuapp.com/chartdatabyyear\";\n      dataFilter = {\n        year: event.target.value,\n        id: localStorage.getItem(\"id\")\n      };\n    }\n\n    console.log(dataFilter);\n    axios.post(url, dataFilter).then(function (response) {\n      console.log(response.data); // if (response.data.message === \"data found\") {\n      //   setTransactions(response.data)\n      // }\n      // else {\n      //   setTransactions(\"data not found\")\n      // }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ReportFilter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ReportFilter, \"fElkwrj4K3YCvG9eF1+GcR7Svdc=\");\n\n_c = ReportFilter;\nexport default ReportFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportFilter\");","map":{"version":3,"sources":["C:/Users/Amey Bobade/Desktop/Money Tracker/front-end/src/pages/components/ReportFilter.js"],"names":["React","useEffect","useState","axios","ReportFilter","filters","value","months","index","filterSelected","setFilterSelected","yearsList","setYearsList","yearSelected","setYearSelected","Date","getFullYear","monthSelected","setMonthSelected","getMonth","dateSelected","setDateSelected","currentYear","listOfYears","i","console","log","handleFilterChange","event","target","handleDateChange","handleSubmit","handleMonthChange","handleYearChange","url","dataFilter","date","id","localStorage","getItem","month","year","post","then","response","data","catch","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst ReportFilter = () => {\r\n  const filters = [\r\n    {\r\n      value: \"Date\",\r\n    },\r\n    {\r\n      value: \"Month\",\r\n    },\r\n    {\r\n      value: \"Year\",\r\n    },\r\n  ];\r\n\r\n  const months = [\r\n    { index: \"01\", value: \"January\" },\r\n    { index: \"02\", value: \"Febuary\" },\r\n    { index: \"03\", value: \"March\" },\r\n    { index: \"04\", value: \"April\" },\r\n    { index: \"05\", value: \"May\" },\r\n    { index: \"06\", value: \"June\" },\r\n    { index: \"07\", value: \"July\" },\r\n    { index: \"08\", value: \"August\" },\r\n    { index: \"09\", value: \"September\" },\r\n    { index: \"10\", value: \"October\" },\r\n    { index: \"11\", value: \"November\" },\r\n    { index: \"12\", value: \"December\" },\r\n  ];\r\n  const [filterSelected, setFilterSelected] = useState(\"Month\");\r\n  const [yearsList, setYearsList] = useState([]);\r\n  const [yearSelected, setYearSelected] = useState(new Date().getFullYear());\r\n  const [monthSelected, setMonthSelected] = useState(new Date().getMonth());\r\n  const [dateSelected, setDateSelected] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // console.log(yearSelected, monthSelected);\r\n    let currentYear = new Date().getFullYear();\r\n    let listOfYears = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      listOfYears[i] = currentYear - i;\r\n    }\r\n    console.log(listOfYears);\r\n    setYearsList(listOfYears);\r\n    \r\n  }, []);\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilterSelected(event.target.value);\r\n    setMonthSelected(new Date().getMonth());\r\n    setYearSelected(new Date().getFullYear());\r\n  };\r\n\r\n  const handleDateChange = (event) => {\r\n    handleSubmit(event);\r\n  };\r\n  const handleMonthChange = (event) => {\r\n    for (let i = 0; i < 12; i++) {\r\n      if (months[i].value === event.target.value) {\r\n        setMonthSelected(i);\r\n      }\r\n    }\r\n    setYearSelected(new Date().getFullYear());\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    handleSubmit(event);\r\n  };\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    let url = \"\";\r\n    let dataFilter = {};\r\n    console.log(dateSelected);\r\n    if (filterSelected === \"Date\") {\r\n      setDateSelected(event.target.value);\r\n      url = \"https://money-tracker-22.herokuapp.com/viewtransactionsbydate\";\r\n      dataFilter = {\r\n        date: event.target.value,\r\n        id: localStorage.getItem(\"id\"),\r\n      };\r\n    } else if (filterSelected === \"Month\") {\r\n      setYearSelected(event.target.value);\r\n      url = \"https://money-tracker-22.herokuapp.com/chartdatabymonth\";\r\n      dataFilter = {\r\n        month: months[monthSelected].index,\r\n        year: event.target.value,\r\n        id: localStorage.getItem(\"id\"),\r\n      };\r\n    } else {\r\n      setYearSelected(event.target.value);\r\n      url = \"https://money-tracker-22.herokuapp.com/chartdatabyyear\";\r\n      dataFilter = {\r\n        year: event.target.value,\r\n        id: localStorage.getItem(\"id\"),\r\n      };\r\n    }\r\n    console.log(dataFilter);\r\n    axios\r\n      .post(url, dataFilter)\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        // if (response.data.message === \"data found\") {\r\n        //   setTransactions(response.data)\r\n        // }\r\n        // else {\r\n        //   setTransactions(\"data not found\")\r\n        // }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return <div>ReportFilter</div>;\r\n};\r\n\r\nexport default ReportFilter;\r\n"]},"metadata":{},"sourceType":"module"}